- content_for(:main) do
  .w-full.mx-auto.my-8.text-xl.font-bold
    %span.float-left
      Shows
    %label#advanced_search_link{ for: "simple-modal", class: "btn btn-outline modal-button float-right", title: 'Search' }
      %i.fa.fa-search.mx-2     
    %input{ type: "checkbox", id: "simple-modal", class: "modal-toggle", style: 'display: none' } 
    .modal
      = search_form_for @q, data: { turbo_frame: '_top' } do |f|
        .modal-box.text-sm.font-light{ data: { controller: 'select' } }
          %h2.text-lg.font-bold
            %i.fa.fa-search.mx-2
            Search
          %ul
            %li.my-4.block#show_name
              = f.label :name_cont
              = f.search_field :name_cont, class: 'input input-bordered'
            %li.my-4.block#author_ethnicity
              = f.label :credits_author_ethnicity_contains
              = f.select :credits_author_ethnicity_contains, Constants.ethnicities_for_select, include_blank: true
            %li.my-4.block#author_gender_identity
              = f.label :credits_author_gender_identity_eq
              = f.select :credits_author_gender_identity_eq, Constants.gender_identities_for_select, include_blank: true
            %li.my-4.block#author_lgbt
              = f.label :credits_author_lgbt_eq
              = f.select :credits_author_lgbt_eq, [['Yes', 1], ['No', 0]], include_blank: true
            %li.my-4.block
              = f.label :show_type_eq
              = f.select :show_type_eq, Constants.show_types_for_select, include_blank: true
            %li.my-4.block
              = f.label :genre_eq
              = f.select :genre_eq, Constants.show_genres_for_select, include_blank: true
            %li.my-4.block#public_domain
              = f.label :public_domain_eq
              = f.select :public_domain_eq, [['Yes', 1], ['No', 0]], include_blank: true
          .modal-action
            %label{ for: "simple-modal", class: "btn btn-outline btn-sm" }
              Cancel
            = f.submit class: 'btn btn-primary btn-sm'
    = link_to 'Add Show', new_show_path, class: 'btn btn-outline btn-primary mb-2 lg:mr-2 lg:mb-0 float-right', data: { turbo_frame: 'details' } if policy(show).edit?
  .w-full.lg.overflow-auto
    .bg-white.rounded.my-6
      %table.table.table-zebra.table-compact.w-full{ data: { controller: 'table-row', highlighted_row: "show_#{show.id}" } }
        %thead
          %th
            %a{ href: sort_url(@q, :name), data: { turbo_frame: '_top' } }
              Name
          %th
            %a{ href: sort_url(@q, :credits_author_last_name), data: { turbo_frame: '_top' } }
              Author
          %th
            %a{ href: sort_url(@q, :show_type), data: { turbo_frame: '_top' } }
              Type
          %th
            %a{ href: sort_url(@q, :genre), data: { turbo_frame: '_top' } }
              Genre
          %th
            %a{ href: sort_url(@q, :year_written), data: { turbo_frame: '_top' } }
              Year Written
          %th
            %a{ href: sort_url(@q, :public_domain), data: { turbo_frame: '_top' } }
              Public Domain
        %tbody
          - shows.each do |show_item|
            = render partial: 'show', locals: { show: show_item }
      = paginate shows
- content_for(:frame) do
  .w-full.mx-auto.my-8.text-xl.font-bold
    = show.name
  = link_to 'Delete Show', show_path(show), method: 'delete', class: 'btn btn-sm btn-error float-right', data: { confirm: 'Are you sure you want to delete this show? All roles will also be deleted.' } if policy(show).destroy?
  - show.authors.each do |author|
    .btn.btn-sm.btn-outline.my-1
      = link_to author.full_name, author_path(author, page: author.page_number(by: :last_name)), data: { turbo_frame: '_top' }

  = render partial: 'form', locals: { show: show }
